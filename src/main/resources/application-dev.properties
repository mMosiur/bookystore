spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=file:src/main/resources/templates/
spring.web.resources.static-locations=file:src/main/resources/static/
spring.web.resources.cache.period=0

spring.security.user.name=admin@bookystore.com
spring.security.user.firstName=Jane
spring.security.user.lastName=Doe
spring.security.user.password=password
spring.security.user.roles=admin

spring.datasource.url=jdbc:h2:mem:/bookystore
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=true

bookystore.payment.orderCreationUrl=https://secure.payu.com/api/v2_1/orders
bookystore.payment.authToken=3e5cac39-7e38-4139-8fd6-30adc06a61bd
# The value below will not work, as the payment gateway cannot ping back to localhost.
# But you can use that url to manually simulate the payment with e.g. Postman request.
# Just change the '%d' to order id and send appropriate body, the simplest example:
# {"order":{"status":"COMPLETED"}}
bookystore.payment.notifyUrlTemplate=http://localhost:8080/orders/payment/notification?id=%d
bookystore.payment.continueUrlTemplate=http://localhost:8080/orders/%d/details?payment
